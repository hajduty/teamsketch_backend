version: '3.9'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "YourStrong(!)Password"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    networks:
      - app-network

  redis:
    image: 'redis:alpine'
    container_name: redis
    ports:
      - '6379:6379'
    networks:
      app-network:
        aliases:
          - redis

  authservice:
    build:
      context: .
      dockerfile: AuthService/Dockerfile
    container_name: authservice
    environment:
      ConnectionStrings__DefaultConnection: "Server=sqlserver,1433;Database=TS;User Id=sa;Password=YourStrong(!)Password;TrustServerCertificate=True;"
      UserServiceURL: "http://userservice:8080"
    ports:
      - "7154:8080"
    depends_on:
      - userservice
      - sqlserver
    networks:
      app-network:
        aliases:
          - authservice

  permissionservice:
    build:
      context: .
      dockerfile: PermissionService/Dockerfile
    container_name: permissionservice
    environment:
      AuthServiceURL: "http://authservice:8080"
      UserServiceURL: "http://userservice:8080"
      ConnectionStrings__DefaultConnection: "Server=sqlserver,1433;Database=TS;User Id=sa;Password=YourStrong(!)Password;TrustServerCertificate=True;"
      ConnectionStrings__RedisConnectionString: "redis:6379,abortConnect=false"
      ASPNETCORE_URLS: "http://0.0.0.0:7122"
    ports:
      - "7122:7122"
      - "7100:7100"
    depends_on:
      - authservice
      - userservice
    networks:
      app-network:
        aliases:
          - permissionservice

  roomservice:
    build:
      context: .
      dockerfile: RoomService/Dockerfile
    container_name: roomservice
    environment:
      ConnectionStrings__DefaultConnection: "Server=sqlserver,1433;Database=TS;User Id=sa;Password=YourStrong(!)Password;TrustServerCertificate=True;"
      PROTO_PATH: "Shared/Contracts/Protos/permission_service.proto"
      #CERT_PATH: "Shared/Certs/server.crt"
      REDIS_URL: "redis:6379"
      PERMISSION_SERVICE_URL: "permissionservice:7122"
    ports:
      - "1234:1234"
    depends_on:
      - permissionservice
      - redis
    networks:
      app-network:
        aliases:
          - roomservice

  userservice:
    build:
      context: .
      dockerfile: UserService/Dockerfile
    container_name: userservice
    environment:
      ConnectionStrings__DefaultConnection: "Server=sqlserver,1433;Database=TS;User Id=sa;Password=YourStrong(!)Password;TrustServerCertificate=True;"
    ports:
      - "8082:8080"
    depends_on:
      - sqlserver
    networks:
      app-network:
        aliases:
          - userservice

networks:
  app-network:
    driver: bridge
